five sort
---

Write a method, fiveSort, that takes in an ArrayList of numbers as an argument. 
The method should rearrange elements of the ArrayList such that all 5s appear at the end. 
Your method should perform this operation in-place by mutating the original ArrayList. 
The method should return the ArrayList.

Elements that are not 5 can appear in any order in the output, 
as long as all 5s are at the end of the array.

Important: Your function needs to mutate the original array in-place and should not 
return a new array. It will fail the test cases if you do not modify the original input array.


JAVA

List<Integer> array = new ArrayList<>(List.of(5, 0));
fiveSort(array); // -> [0, 5] 

List<Integer> array1 = new ArrayList<>(List.of(12, 5, 1, 5, 12, 7));
fiveSort(array1); // -> [12, 7, 1, 12, 5, 5] 

List<Integer> array2 = new ArrayList<>(List.of(5, 2, 5, 6, 5, 1, 10, 2, 5, 5));
fiveSort(array2); // -> [2, 2, 10, 6, 1, 5, 5, 5, 5, 5] 

List<Integer> array3 = new ArrayList<>(List.of(5, 5, 5, 1, 1, 1, 4));
fiveSort(array3); // -> [4, 1, 1, 1, 5, 5, 5] 

List<Integer> array4 = new ArrayList<>(List.of(5, 1, 2, 5, 5, 3, 2, 5, 1, 5, 5, 5, 4, 5));
fiveSort(array4); // -> [4, 1, 2, 1, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5] 


5, 5, 5, 1, 1, 1, 4
            i
      j


